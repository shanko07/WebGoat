# This is a basic workflow to help you get started with Actions

name: Coverity

# Controls when the workflow will run
on:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      - uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '15'
          cache: 'maven'
      - name: Build with Maven
        run: mvn clean install -DskipTests
        
      - name: Install Coverity
        run: |
          curl -k -s -L --user ${{ secrets.COVERITY_USER }}:${{ secrets.COVERITY_AUTHKEY }} -o cov-analysis.tar.gz ${{ secrets.COVERITY_URL }}/downloadFile.htm?fn=cov-analysis-linux64-2022.3.0.tar.gz
          curl -k -s -L --user ${{ secrets.COVERITY_USER }}:${{ secrets.COVERITY_AUTHKEY }} -o license.dat ${{ secrets.COVERITY_URL }}/downloadFile.htm?fn=license.dat
          tar xzf cov-analysis.tar.gz
          mv cov-analysis-linux64-2022.3.0 cov-analysis-linux64
          rm -rf cov-analysis.tar.gz
          echo $PATH
          export PATH=./cov-analysis-linux64/bin:$PATH
          echo $PATH
          cov-analyze --version
          echo "./cov-analysis-linux64/bin" >> $GITHUB_PATH
        
      
      - name: Test Cov Install
        run: |
          echo $PATH
          ls -lahrt
          pwd
          cov-analyze --version

      - name: Run Coverity
        uses: synopsys-sig-community/synopsys-github-templates/coverity@<version>
        with:
          coverity-url: ${{ secrets.COVERITY_URL }}
          coverity-user: ${{ secrets.COVERITY_USER }}
          coverity-passphrase: ${{ secrets.COVERITY_PASSPHRASE }}
          coverity-project-name: ${{ github.event.repository.name }}
          coverity-checker-options: --webapp-security
          create-stream-and-project: true
          github-token: ${{ secrets.GITHUB_TOKEN }}
